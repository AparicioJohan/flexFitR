% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/03_plant_height.R
\name{height_HTP}
\alias{height_HTP}
\title{Plant Height Modelling}
\usage{
height_HTP(
  x,
  height = "PH",
  canopy = "Canopy",
  id = NULL,
  fn = c("fn_exp1_exp", "fn_exp1_lin", "fn_exp2_exp", "fn_exp2_lin"),
  ...
)
}
\arguments{
\item{x}{An object of class \code{read_HTP}, containing the results of the \code{read_HTP()} function.}

\item{height}{A string specifying the plant height trait to be modeled. Default is \code{"PH"}.}

\item{canopy}{A string specifying the canopy trait to be modeled. Default is \code{"Canopy"}.}

\item{id}{An optional vector of plot IDs to filter the data. Default is \code{NULL}, meaning all plots are used.}

\item{fn}{One of the following options: "fn_exp1_exp", "fn_exp1_lin", "fn_exp2_exp", "fn_exp2_lin".}

\item{...}{Additional arguments passed to the \code{modeler_HTP()} function.}
}
\value{
An object of class \code{modeler_HTP}, which is a list containing the following elements:
\describe{
  \item{\code{param}}{A data frame containing the optimized parameters and related information.}
  \item{\code{dt}}{A data frame with data used and fitted values.}
  \item{\code{fn}}{The call used to calculate the AUC.}
  \item{\code{metrics}}{Metrics and summary of the models.}
  \item{\code{max_time}}{Maximum time value used for calculating the AUC.}
  \item{\code{execution}}{Execution time.}
  \item{\code{response}}{Response variable.}
  \item{\code{.keep}}{Metadata to keep across.}
  \item{\code{fun}}{Function being optimized}
  \item{\code{fit}}{List with the fitted models.}
}
}
\description{
Plant Height Modelling
}
\examples{
library(exploreHTP)
data(dt_chips)
results <- dt_chips |>
  read_HTP(
    x = DAP,
    y = c(Canopy, PH),
    id = Plot,
    .keep = c(Gen, Row, Range)
  )
mod_1 <- height_HTP(
  x = results,
  height = "PH",
  canopy = "Canopy",
  id = 60,
  fn = "fn_exp2_lin"
)
print(mod_1)
plot(x = mod_1, id = 60)
mod_2 <- height_HTP(
  x = results,
  height = "PH",
  canopy = "Canopy",
  id = 60,
  fn = "fn_exp2_exp"
)
plot(x = mod_2, id = 60)
print(mod_2)
}
